var N=null,E="",T="t",U="u",searchIndex={};
var R=["serde_dynamodb","string","attributevalue","result","hashmap","This type represents all possible errors that can occur…","from_hashmap","Deserialize an instance of type `T` from an…","buildhasher","to_hashmap","Serialize the given data structure as an `HashMap<String,…","serde_dynamodb::error","formatter","ToQueryInput"];

searchIndex[R[0]]={"doc":"DynamoDB","i":[[5,R[6],R[0],R[7],N,[[[R[1]],[R[2]],[R[8]],[R[4],[R[1],R[2]]]],[R[3]]]],[5,R[9],E,R[10],N,[[[T]],[[R[3],[R[4]]],[R[4],[R[1],R[2]]]]]],[0,"error",E,R[5],N,N],[3,"Error",R[11],R[5],N,N],[12,"message",E,"Message describing the error",0,N],[6,"Result",E,"Alias for a Result with the error type…",N,N],[0,"streams",R[0],"Methods in this module are generated to work with…",N,N],[5,R[6],"serde_dynamodb::streams",R[7],N,[[[R[1]],[R[4],[R[1],R[2]]],[R[2]],[R[8]]],[R[3]]]],[5,R[9],E,R[10],N,[[[T]],[[R[3],[R[4]]],[R[4],[R[1],R[2]]]]]],[8,R[13],R[0],"A data structure that can be used as a DynamoDB `QueryInput`",N,N],[10,"to_query_input",E,"Transform this structure as a DynamoDB `QueryInput` on the…",1,[[[R[1]],["self"]],["queryinput"]]],[11,"to_string",R[11],E,0,[[["self"]],[R[1]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"try_from",E,E,0,[[[U]],[R[3]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,"type_id",E,E,0,[[["self"]],["typeid"]]],[11,"borrow_mut",E,E,0,[[["self"]],[T]]],[11,"try_into",E,E,0,[[],[R[3]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[[R[12]],["self"]],[R[3]]]],[11,"description",E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[["option",["error"]],["error"]]]],[11,"custom",E,E,0,[[["display"]],["error"]]],[11,"custom",E,E,0,[[["display"]],["error"]]]],"p":[[3,"Error"],[8,R[13]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);